/* --------------------------------------------------------
  Copyright (C) 2009 Vo Ngoc Anh and Alistair Moffat, The University
	  of Melbourne, Australia.

	This program is free software; you can use, redistribute it and/or modify
	it, providing that these heading lines remain.
  There is no warranty, either express or implied, that it is fit for
	any purpose whatsoever, and neither the authors nor The University of
	Melbourne accept any responsibility for any consequences that may
	arise from your use of this software.

  We ask that, if you use this software to derive experimental results
	that are reported in any way, you cite the original work in which the
	underlying processes are described by referencing to the paper:
	  ...


  AUTHORS
	Vo Ngoc Anh and Alistair Moffat,
	Department of Computer Science and Software Engineering,
	The University of Melbourne,
	Victoria 3010, Australia.
	Email: vo@csse.unimelb.edu.au, alistair@csse.unimelb.edu.au.

	BUG & FEEDBACK REPORT: Please send to vo@csse.unimelb.edu.au


Released at: Thu Aug 27 14:52:57 EST 2009

 -------------------------------------------------------- */


/* This code is automatically generated by:
          ./create_carry_unpack 64
   Do not change! 
   -------------------------- */


#ifndef _UNPACK_CARRY_64_H_
#define _UNPACK_CARRY_64_H_
#if _BYTES_PER_WORD == 8


#define CARRY_UNPACK_64(p)               \
  switch(__sel+base) {                         \
  case 0:                                      \
    for (i=0; i<255; i++) p[i]= 1;  \
    p += 255;              \
    __sel= (*__wpos++>>0) & __mask[4];    \
    break;                                        \
  case 1:                                      \
    for (i=0; i<180; i++) p[i]= 1;  \
    p += 180;              \
    __sel= (*__wpos++>>0) & __mask[4];    \
    break;                                        \
  case 2:                                      \
    for (i=0; i<120; i++) p[i]= 1;  \
    p += 120;              \
    __sel= (*__wpos++>>0) & __mask[4];    \
    break;                                        \
  case 3:                                      \
    p[0]= ( *__wpos & __mask[1] ) + 1;       \
    p[1]= ( (*__wpos >> 1) & __mask[1] ) + 1;       \
    p[2]= ( (*__wpos >> 2) & __mask[1] ) + 1;       \
    p[3]= ( (*__wpos >> 3) & __mask[1] ) + 1;       \
    p[4]= ( (*__wpos >> 4) & __mask[1] ) + 1;       \
    p[5]= ( (*__wpos >> 5) & __mask[1] ) + 1;       \
    p[6]= ( (*__wpos >> 6) & __mask[1] ) + 1;       \
    p[7]= ( (*__wpos >> 7) & __mask[1] ) + 1;       \
    p[8]= ( (*__wpos >> 8) & __mask[1] ) + 1;       \
    p[9]= ( (*__wpos >> 9) & __mask[1] ) + 1;       \
    p[10]= ( (*__wpos >> 10) & __mask[1] ) + 1;       \
    p[11]= ( (*__wpos >> 11) & __mask[1] ) + 1;       \
    p[12]= ( (*__wpos >> 12) & __mask[1] ) + 1;       \
    p[13]= ( (*__wpos >> 13) & __mask[1] ) + 1;       \
    p[14]= ( (*__wpos >> 14) & __mask[1] ) + 1;       \
    p[15]= ( (*__wpos >> 15) & __mask[1] ) + 1;       \
    p[16]= ( (*__wpos >> 16) & __mask[1] ) + 1;       \
    p[17]= ( (*__wpos >> 17) & __mask[1] ) + 1;       \
    p[18]= ( (*__wpos >> 18) & __mask[1] ) + 1;       \
    p[19]= ( (*__wpos >> 19) & __mask[1] ) + 1;       \
    p[20]= ( (*__wpos >> 20) & __mask[1] ) + 1;       \
    p[21]= ( (*__wpos >> 21) & __mask[1] ) + 1;       \
    p[22]= ( (*__wpos >> 22) & __mask[1] ) + 1;       \
    p[23]= ( (*__wpos >> 23) & __mask[1] ) + 1;       \
    p[24]= ( (*__wpos >> 24) & __mask[1] ) + 1;       \
    p[25]= ( (*__wpos >> 25) & __mask[1] ) + 1;       \
    p[26]= ( (*__wpos >> 26) & __mask[1] ) + 1;       \
    p[27]= ( (*__wpos >> 27) & __mask[1] ) + 1;       \
    p[28]= ( (*__wpos >> 28) & __mask[1] ) + 1;       \
    p[29]= ( (*__wpos >> 29) & __mask[1] ) + 1;       \
    p[30]= ( (*__wpos >> 30) & __mask[1] ) + 1;       \
    p[31]= ( (*__wpos >> 31) & __mask[1] ) + 1;       \
    p[32]= ( (*__wpos >> 32) & __mask[1] ) + 1;       \
    p[33]= ( (*__wpos >> 33) & __mask[1] ) + 1;       \
    p[34]= ( (*__wpos >> 34) & __mask[1] ) + 1;       \
    p[35]= ( (*__wpos >> 35) & __mask[1] ) + 1;       \
    p[36]= ( (*__wpos >> 36) & __mask[1] ) + 1;       \
    p[37]= ( (*__wpos >> 37) & __mask[1] ) + 1;       \
    p[38]= ( (*__wpos >> 38) & __mask[1] ) + 1;       \
    p[39]= ( (*__wpos >> 39) & __mask[1] ) + 1;       \
    p[40]= ( (*__wpos >> 40) & __mask[1] ) + 1;       \
    p[41]= ( (*__wpos >> 41) & __mask[1] ) + 1;       \
    p[42]= ( (*__wpos >> 42) & __mask[1] ) + 1;       \
    p[43]= ( (*__wpos >> 43) & __mask[1] ) + 1;       \
    p[44]= ( (*__wpos >> 44) & __mask[1] ) + 1;       \
    p[45]= ( (*__wpos >> 45) & __mask[1] ) + 1;       \
    p[46]= ( (*__wpos >> 46) & __mask[1] ) + 1;       \
    p[47]= ( (*__wpos >> 47) & __mask[1] ) + 1;       \
    p[48]= ( (*__wpos >> 48) & __mask[1] ) + 1;       \
    p[49]= ( (*__wpos >> 49) & __mask[1] ) + 1;       \
    p[50]= ( (*__wpos >> 50) & __mask[1] ) + 1;       \
    p[51]= ( (*__wpos >> 51) & __mask[1] ) + 1;       \
    p[52]= ( (*__wpos >> 52) & __mask[1] ) + 1;       \
    p[53]= ( (*__wpos >> 53) & __mask[1] ) + 1;       \
    p[54]= ( (*__wpos >> 54) & __mask[1] ) + 1;       \
    p[55]= ( (*__wpos >> 55) & __mask[1] ) + 1;       \
    p[56]= ( (*__wpos >> 56) & __mask[1] ) + 1;       \
    p[57]= ( (*__wpos >> 57) & __mask[1] ) + 1;       \
    p[58]= ( (*__wpos >> 58) & __mask[1] ) + 1;       \
    p[59]= ( (*__wpos >> 59) & __mask[1] ) + 1;       \
    p[60]= ( (*__wpos >> 60) & __mask[1] ) + 1;       \
    p[61]= ( (*__wpos >> 61) & __mask[1] ) + 1;       \
    p[62]= ( (*__wpos >> 62) & __mask[1] ) + 1;       \
    p[63]= ( (*__wpos >> 63) & __mask[1] ) + 1;       \
    p += 64;              \
    __wpos++;                           \
    selinprev= 0; \
    break;                                        \
  case 4:                                      \
    p[0]= ( *__wpos & __mask[2] ) + 1;       \
    p[1]= ( (*__wpos >> 2) & __mask[2] ) + 1;       \
    p[2]= ( (*__wpos >> 4) & __mask[2] ) + 1;       \
    p[3]= ( (*__wpos >> 6) & __mask[2] ) + 1;       \
    p[4]= ( (*__wpos >> 8) & __mask[2] ) + 1;       \
    p[5]= ( (*__wpos >> 10) & __mask[2] ) + 1;       \
    p[6]= ( (*__wpos >> 12) & __mask[2] ) + 1;       \
    p[7]= ( (*__wpos >> 14) & __mask[2] ) + 1;       \
    p[8]= ( (*__wpos >> 16) & __mask[2] ) + 1;       \
    p[9]= ( (*__wpos >> 18) & __mask[2] ) + 1;       \
    p[10]= ( (*__wpos >> 20) & __mask[2] ) + 1;       \
    p[11]= ( (*__wpos >> 22) & __mask[2] ) + 1;       \
    p[12]= ( (*__wpos >> 24) & __mask[2] ) + 1;       \
    p[13]= ( (*__wpos >> 26) & __mask[2] ) + 1;       \
    p[14]= ( (*__wpos >> 28) & __mask[2] ) + 1;       \
    p[15]= ( (*__wpos >> 30) & __mask[2] ) + 1;       \
    p[16]= ( (*__wpos >> 32) & __mask[2] ) + 1;       \
    p[17]= ( (*__wpos >> 34) & __mask[2] ) + 1;       \
    p[18]= ( (*__wpos >> 36) & __mask[2] ) + 1;       \
    p[19]= ( (*__wpos >> 38) & __mask[2] ) + 1;       \
    p[20]= ( (*__wpos >> 40) & __mask[2] ) + 1;       \
    p[21]= ( (*__wpos >> 42) & __mask[2] ) + 1;       \
    p[22]= ( (*__wpos >> 44) & __mask[2] ) + 1;       \
    p[23]= ( (*__wpos >> 46) & __mask[2] ) + 1;       \
    p[24]= ( (*__wpos >> 48) & __mask[2] ) + 1;       \
    p[25]= ( (*__wpos >> 50) & __mask[2] ) + 1;       \
    p[26]= ( (*__wpos >> 52) & __mask[2] ) + 1;       \
    p[27]= ( (*__wpos >> 54) & __mask[2] ) + 1;       \
    p[28]= ( (*__wpos >> 56) & __mask[2] ) + 1;       \
    p[29]= ( (*__wpos >> 58) & __mask[2] ) + 1;       \
    p[30]= ( (*__wpos >> 60) & __mask[2] ) + 1;       \
    p[31]= ( (*__wpos >> 62) & __mask[2] ) + 1;       \
    p += 32;              \
    __wpos++;                           \
    selinprev= 0; \
    break;                                        \
  case 5:                                      \
    p[0]= ( *__wpos & __mask[3] ) + 1;       \
    p[1]= ( (*__wpos >> 3) & __mask[3] ) + 1;       \
    p[2]= ( (*__wpos >> 6) & __mask[3] ) + 1;       \
    p[3]= ( (*__wpos >> 9) & __mask[3] ) + 1;       \
    p[4]= ( (*__wpos >> 12) & __mask[3] ) + 1;       \
    p[5]= ( (*__wpos >> 15) & __mask[3] ) + 1;       \
    p[6]= ( (*__wpos >> 18) & __mask[3] ) + 1;       \
    p[7]= ( (*__wpos >> 21) & __mask[3] ) + 1;       \
    p[8]= ( (*__wpos >> 24) & __mask[3] ) + 1;       \
    p[9]= ( (*__wpos >> 27) & __mask[3] ) + 1;       \
    p[10]= ( (*__wpos >> 30) & __mask[3] ) + 1;       \
    p[11]= ( (*__wpos >> 33) & __mask[3] ) + 1;       \
    p[12]= ( (*__wpos >> 36) & __mask[3] ) + 1;       \
    p[13]= ( (*__wpos >> 39) & __mask[3] ) + 1;       \
    p[14]= ( (*__wpos >> 42) & __mask[3] ) + 1;       \
    p[15]= ( (*__wpos >> 45) & __mask[3] ) + 1;       \
    p[16]= ( (*__wpos >> 48) & __mask[3] ) + 1;       \
    p[17]= ( (*__wpos >> 51) & __mask[3] ) + 1;       \
    p[18]= ( (*__wpos >> 54) & __mask[3] ) + 1;       \
    p[19]= ( (*__wpos >> 57) & __mask[3] ) + 1;       \
    p[20]= ( (*__wpos >> 60) & __mask[3] ) + 1;       \
    p += 21;              \
    __wpos++;                           \
    selinprev= 0; \
    break;                                        \
  case 6:                                      \
    p[0]= ( *__wpos & __mask[4] ) + 1;       \
    p[1]= ( (*__wpos >> 4) & __mask[4] ) + 1;       \
    p[2]= ( (*__wpos >> 8) & __mask[4] ) + 1;       \
    p[3]= ( (*__wpos >> 12) & __mask[4] ) + 1;       \
    p[4]= ( (*__wpos >> 16) & __mask[4] ) + 1;       \
    p[5]= ( (*__wpos >> 20) & __mask[4] ) + 1;       \
    p[6]= ( (*__wpos >> 24) & __mask[4] ) + 1;       \
    p[7]= ( (*__wpos >> 28) & __mask[4] ) + 1;       \
    p[8]= ( (*__wpos >> 32) & __mask[4] ) + 1;       \
    p[9]= ( (*__wpos >> 36) & __mask[4] ) + 1;       \
    p[10]= ( (*__wpos >> 40) & __mask[4] ) + 1;       \
    p[11]= ( (*__wpos >> 44) & __mask[4] ) + 1;       \
    p[12]= ( (*__wpos >> 48) & __mask[4] ) + 1;       \
    p[13]= ( (*__wpos >> 52) & __mask[4] ) + 1;       \
    p[14]= ( (*__wpos >> 56) & __mask[4] ) + 1;       \
    p[15]= ( (*__wpos >> 60) & __mask[4] ) + 1;       \
    p += 16;              \
    __wpos++;                           \
    selinprev= 0; \
    break;                                        \
  case 7:                                      \
    p[0]= ( *__wpos & __mask[5] ) + 1;       \
    p[1]= ( (*__wpos >> 5) & __mask[5] ) + 1;       \
    p[2]= ( (*__wpos >> 10) & __mask[5] ) + 1;       \
    p[3]= ( (*__wpos >> 15) & __mask[5] ) + 1;       \
    p[4]= ( (*__wpos >> 20) & __mask[5] ) + 1;       \
    p[5]= ( (*__wpos >> 25) & __mask[5] ) + 1;       \
    p[6]= ( (*__wpos >> 30) & __mask[5] ) + 1;       \
    p[7]= ( (*__wpos >> 35) & __mask[5] ) + 1;       \
    p[8]= ( (*__wpos >> 40) & __mask[5] ) + 1;       \
    p[9]= ( (*__wpos >> 45) & __mask[5] ) + 1;       \
    p[10]= ( (*__wpos >> 50) & __mask[5] ) + 1;       \
    p[11]= ( (*__wpos >> 55) & __mask[5] ) + 1;       \
    p += 12;              \
    __sel= (*__wpos++>>60) & __mask[4];    \
    break;                                        \
  case 8:                                      \
    p[0]= ( *__wpos & __mask[6] ) + 1;       \
    p[1]= ( (*__wpos >> 6) & __mask[6] ) + 1;       \
    p[2]= ( (*__wpos >> 12) & __mask[6] ) + 1;       \
    p[3]= ( (*__wpos >> 18) & __mask[6] ) + 1;       \
    p[4]= ( (*__wpos >> 24) & __mask[6] ) + 1;       \
    p[5]= ( (*__wpos >> 30) & __mask[6] ) + 1;       \
    p[6]= ( (*__wpos >> 36) & __mask[6] ) + 1;       \
    p[7]= ( (*__wpos >> 42) & __mask[6] ) + 1;       \
    p[8]= ( (*__wpos >> 48) & __mask[6] ) + 1;       \
    p[9]= ( (*__wpos >> 54) & __mask[6] ) + 1;       \
    p += 10;              \
    __sel= (*__wpos++>>60) & __mask[4];    \
    break;                                        \
  case 9:                                      \
    p[0]= ( *__wpos & __mask[7] ) + 1;       \
    p[1]= ( (*__wpos >> 7) & __mask[7] ) + 1;       \
    p[2]= ( (*__wpos >> 14) & __mask[7] ) + 1;       \
    p[3]= ( (*__wpos >> 21) & __mask[7] ) + 1;       \
    p[4]= ( (*__wpos >> 28) & __mask[7] ) + 1;       \
    p[5]= ( (*__wpos >> 35) & __mask[7] ) + 1;       \
    p[6]= ( (*__wpos >> 42) & __mask[7] ) + 1;       \
    p[7]= ( (*__wpos >> 49) & __mask[7] ) + 1;       \
    p[8]= ( (*__wpos >> 56) & __mask[7] ) + 1;       \
    p += 9;              \
    __wpos++;                           \
    selinprev= 0; \
    break;                                        \
  case 10:                                      \
    p[0]= ( *__wpos & __mask[8] ) + 1;       \
    p[1]= ( (*__wpos >> 8) & __mask[8] ) + 1;       \
    p[2]= ( (*__wpos >> 16) & __mask[8] ) + 1;       \
    p[3]= ( (*__wpos >> 24) & __mask[8] ) + 1;       \
    p[4]= ( (*__wpos >> 32) & __mask[8] ) + 1;       \
    p[5]= ( (*__wpos >> 40) & __mask[8] ) + 1;       \
    p[6]= ( (*__wpos >> 48) & __mask[8] ) + 1;       \
    p[7]= ( (*__wpos >> 56) & __mask[8] ) + 1;       \
    p += 8;              \
    __wpos++;                           \
    selinprev= 0; \
    break;                                        \
  case 11:                                      \
    p[0]= ( *__wpos & __mask[9] ) + 1;       \
    p[1]= ( (*__wpos >> 9) & __mask[9] ) + 1;       \
    p[2]= ( (*__wpos >> 18) & __mask[9] ) + 1;       \
    p[3]= ( (*__wpos >> 27) & __mask[9] ) + 1;       \
    p[4]= ( (*__wpos >> 36) & __mask[9] ) + 1;       \
    p[5]= ( (*__wpos >> 45) & __mask[9] ) + 1;       \
    p[6]= ( (*__wpos >> 54) & __mask[9] ) + 1;       \
    p += 7;              \
    __wpos++;                           \
    selinprev= 0; \
    break;                                        \
  case 12:                                      \
    p[0]= ( *__wpos & __mask[10] ) + 1;       \
    p[1]= ( (*__wpos >> 10) & __mask[10] ) + 1;       \
    p[2]= ( (*__wpos >> 20) & __mask[10] ) + 1;       \
    p[3]= ( (*__wpos >> 30) & __mask[10] ) + 1;       \
    p[4]= ( (*__wpos >> 40) & __mask[10] ) + 1;       \
    p[5]= ( (*__wpos >> 50) & __mask[10] ) + 1;       \
    p += 6;              \
    __sel= (*__wpos++>>60) & __mask[4];    \
    break;                                        \
  case 13:                                      \
    p[0]= ( *__wpos & __mask[12] ) + 1;       \
    p[1]= ( (*__wpos >> 12) & __mask[12] ) + 1;       \
    p[2]= ( (*__wpos >> 24) & __mask[12] ) + 1;       \
    p[3]= ( (*__wpos >> 36) & __mask[12] ) + 1;       \
    p[4]= ( (*__wpos >> 48) & __mask[12] ) + 1;       \
    p += 5;              \
    __sel= (*__wpos++>>60) & __mask[4];    \
    break;                                        \
  case 14:                                      \
    p[0]= ( *__wpos & __mask[15] ) + 1;       \
    p[1]= ( (*__wpos >> 15) & __mask[15] ) + 1;       \
    p[2]= ( (*__wpos >> 30) & __mask[15] ) + 1;       \
    p[3]= ( (*__wpos >> 45) & __mask[15] ) + 1;       \
    p += 4;              \
    __sel= (*__wpos++>>60) & __mask[4];    \
    break;                                        \
  case 15:                                      \
    p[0]= ( *__wpos & __mask[16] ) + 1;       \
    p[1]= ( (*__wpos >> 16) & __mask[16] ) + 1;       \
    p[2]= ( (*__wpos >> 32) & __mask[16] ) + 1;       \
    p[3]= ( (*__wpos >> 48) & __mask[16] ) + 1;       \
    p += 4;              \
    __wpos++;                           \
    selinprev= 0; \
    break;                                        \
  case 16:                                      \
    p[0]= ( *__wpos & __mask[20] ) + 1;       \
    p[1]= ( (*__wpos >> 20) & __mask[20] ) + 1;       \
    p[2]= ( (*__wpos >> 40) & __mask[20] ) + 1;       \
    p += 3;              \
    __sel= (*__wpos++>>60) & __mask[4];    \
    break;                                        \
  case 17:                                      \
    p[0]= ( *__wpos & __mask[21] ) + 1;       \
    p[1]= ( (*__wpos >> 21) & __mask[21] ) + 1;       \
    p[2]= ( (*__wpos >> 42) & __mask[21] ) + 1;       \
    p += 3;              \
    __wpos++;                           \
    selinprev= 0; \
    break;                                        \
  case 18:                                      \
    p[0]= ( *__wpos & __mask[30] ) + 1;       \
    p[1]= ( (*__wpos >> 30) & __mask[30] ) + 1;       \
    p += 2;              \
    __sel= (*__wpos++>>60) & __mask[4];    \
    break;                                        \
  case 19:                                      \
    p[0]= ( *__wpos & __mask[32] ) + 1;       \
    p[1]= ( (*__wpos >> 32) & __mask[32] ) + 1;       \
    p += 2;              \
    __wpos++;                           \
    selinprev= 0; \
    break;                                        \
  case 20:                                      \
    p[0]= ( *__wpos & __mask[60] ) + 1;       \
    p += 1;              \
    __sel= (*__wpos++>>60) & __mask[4];    \
    break;                                        \
  case 21:                                      \
    p[0]= ( *__wpos & __mask[64] ) + 1;       \
    p += 1;              \
    __wpos++;                           \
    selinprev= 0; \
    break;                                        \
  }


#endif  /* _BYTES_PER_WORD == 8 */
#endif  /* _UNPACK_64_H_ */

