;------------------------------------------------------------------------------
;
; unpack_nrv2e()
;
; input:
;   ESI = src (packed)
;   EDI = dst (unpacked)
; output:
;   EAX = unpacked size
;------------------------------------------------------------------------------

unpack_nrv2e:   pusha

                push    -1
                pop     ebp

                call    __pop_getbit
                add     ebx, ebx
                jnz     __x1
                mov     ebx, [esi]
                sub     esi, -4
                adc     ebx, ebx
__x1:           retn
__pop_getbit:

                ;;

                jmp     __dcl1_n2e
__decompr_literals_n2e:
                movsb


__decompr_loop_n2e:
                add     ebx, ebx
                jnz     __dcl2_n2e
__dcl1_n2e:
                mov     ebx, [esi]
                sub     esi, -4
                adc     ebx, ebx
__dcl2_n2e:
                jc      __decompr_literals_n2e
                xor     eax, eax
                inc     eax
__loop1_n2e:
                call    dword ptr [esp] ; getbit
                adc     eax, eax
                call    dword ptr [esp] ; getbit
                jc      __loopend1_n2e
                dec     eax
                call    dword ptr [esp] ; getbit
                adc     eax, eax
                jmp     __loop1_n2e

__decompr_mlen1_n2e:
                call    dword ptr [esp] ; getbit
                adc     ecx, ecx
                jmp     __decompr_got_mlen_n2e

__loopend1_n2e:
                xor     ecx, ecx
                sub     eax, 3
                jb      __decompr_prev_dist_n2e
                shl     eax, 8
                mov     al, [esi]
                inc     esi
                xor     eax, -1
                jz      __decompr_end_n2e
                sar     eax, 1                  ; shift low-bit into carry
                mov     ebp, eax
                jmp     __decompr_ebpeax_n2e
__decompr_prev_dist_n2e:
                call    dword ptr [esp] ; getbit
__decompr_ebpeax_n2e:
                jc      __decompr_mlen1_n2e
                inc     ecx
                call    dword ptr [esp] ; getbit
                jc      __decompr_mlen1_n2e
__loop2_n2e:
                call    dword ptr [esp] ; getbit
                adc     ecx, ecx
                call    dword ptr [esp] ; getbit
                jnc     __loop2_n2e
                inc     ecx
                inc     ecx
__decompr_got_mlen_n2e:
                cmp     ebp, -500h
                adc     ecx, 2
                push    esi
                lea     esi, [edi+ebp]
                rep
                movsb
                pop     esi
                jmp     __decompr_loop_n2e
__decompr_end_n2e:

                pop     ecx     ; free ptr to getbit

                ;;

                mov     [esp+28], edi
                popa
                sub     eax, edi

; EOF
