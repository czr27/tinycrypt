; Listing generated by Microsoft (R) Optimizing Compiler Version 19.10.25019.0 

	TITLE	C:\hub\tinycrypt\block\xtea\xtea2.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_xtea_encrypt
; Function compile flags: /Ogspy
; File c:\hub\tinycrypt\block\xtea\xtea2.c
;	COMDAT _xtea_encrypt
_TEXT	SEGMENT
_j$1$ = -4						; size = 4
_v0$1$ = -4						; size = 4
_rnds$ = 8						; size = 4
_key$ = 12						; size = 4
_buf$ = 16						; size = 4
_xtea_encrypt PROC					; COMDAT

; 32   : void xtea_encrypt(uint32_t rnds, void *key, void *buf) {

	push	ecx

; 33   :     int      i, j;
; 34   :     uint32_t x, y, v0, v1, t, sum=0;
; 35   :     uint32_t *k=(uint32_t*)key;
; 36   :     uint32_t *v=(uint32_t*)buf;
; 37   :     
; 38   :     v0 = v[0]; v1 = v[1];

	mov	edx, DWORD PTR _buf$[esp]
	push	ebx

; 39   :     
; 40   :     for (i=0; i<rnds; i++) {

	mov	ebx, DWORD PTR _rnds$[esp+4]
	push	ebp
	mov	eax, DWORD PTR [edx]
	mov	ebp, DWORD PTR [edx+4]
	push	edi
	xor	edi, edi
	test	ebx, ebx
	je	SHORT $LN3@xtea_encry
	mov	edx, eax
	push	esi
$LL4@xtea_encry:
	mov	ebx, DWORD PTR _key$[esp+16]

; 41   :       for (j=0; j<2; j++) {

	xor	eax, eax
	mov	DWORD PTR _j$1$[esp+20], eax
$LL7@xtea_encry:

; 42   :         t = sum;

	mov	esi, edi

; 43   :         if (j) {

	test	eax, eax
	je	SHORT $LN8@xtea_encry

; 44   :           sum += 0x9E3779B9;

	sub	edi, 1640531527				; 61c88647H

; 45   :           t = sum >> 11;          

	mov	esi, edi
	shr	esi, 11					; 0000000bH
$LN8@xtea_encry:

; 46   :         }
; 47   :         v0  += ((((v1 << 4) ^ (v1 >> 5)) + v1) ^ (sum + k[t & 3]));        

	and	esi, 3
	mov	ecx, ebp
	shr	ecx, 5
	mov	eax, ebp
	shl	eax, 4
	xor	ecx, eax
	mov	eax, DWORD PTR [ebx+esi*4]
	add	ecx, ebp
	add	eax, edi
	xor	ecx, eax
	mov	eax, DWORD PTR _j$1$[esp+20]
	add	ecx, edx
	inc	eax
	mov	DWORD PTR _j$1$[esp+20], eax

; 48   :         XCHG(v0, v1);

	mov	edx, ebp
	mov	ebp, ecx
	cmp	eax, 2
	jl	SHORT $LL7@xtea_encry

; 39   :     
; 40   :     for (i=0; i<rnds; i++) {

	sub	DWORD PTR _rnds$[esp+16], 1
	mov	DWORD PTR _v0$1$[esp+20], edx
	jne	SHORT $LL4@xtea_encry
	mov	edx, DWORD PTR _buf$[esp+16]
	mov	eax, DWORD PTR _v0$1$[esp+20]
	pop	esi
$LN3@xtea_encry:
	pop	edi

; 49   :       }
; 50   :     }
; 51   :     v[0] = v0; v[1] = v1;

	mov	DWORD PTR [edx+4], ebp
	pop	ebp
	mov	DWORD PTR [edx], eax
	pop	ebx

; 52   : }

	pop	ecx
	ret	0
_xtea_encrypt ENDP
_TEXT	ENDS
END
